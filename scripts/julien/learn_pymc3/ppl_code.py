import os
import pandas as pd
import pymc3 as pm
import numpy as np
import theano.tensor as tt
from theano.ifelse import ifelse
from mb_modelbase.models_core.pyMC3_model import ProbabilisticPymc3Model
def create_fun():
   def code_to_fit(file='../data/titanic_cleaned.csv', modelname='test_jp2', fit=True, dtm=None, pp_graph=None):
            # income is gaussian, depends on age
            filepath = os.path.join(os.path.dirname(__file__), '../data/titanic_cleaned.csv')
            df_model_repr = pd.read_csv(filepath)
            df_orig = dtm.backward(df_model_repr, inplace=False)
            if fit:
                modelname = modelname + '_fitted'
            # Set up shared variables

            model = pm.Model()
            data = None
            with model:
                pclass = pm.Categorical('pclass', p=[0.4136,0.2305,0.356])
                sex = pm.Categorical('sex', p=tt.switch(tt.eq(pclass, 0), [0.6866,0.3134], tt.switch(tt.eq(pclass, 1), [0.7679,0.2321], [0.5491,0.4509])))
                ticket = pm.Categorical('ticket', p
                fare = pm.Normal('fare', mu=tt.switch(tt.eq(sex, 0), tt.switch(tt.eq(pclass, 0), 108.8666, tt.switch(tt.eq(pclass, 1), 24.1183, 12.5147)), tt.switch(tt.eq(pclass, 0), 72.0712, tt.switch(tt.eq(pclass, 1), 20.2144, 14.015))), sigma=tt.switch(tt.eq(sex, 0), tt.switch(tt.eq(pclass, 0), 83.3719, tt.switch(tt.eq(pclass, 1), 11.9473, 5.838)), tt.switch(tt.eq(pclass, 0), 91.1007, tt.switch(tt.eq(pclass, 1), 9.2129, 13.3239))))
                embarked = pm.Categorical('embarked', p=tt.switch(tt.eq(pclass, 0), [0.4876,0.01,0.5025], tt.switch(tt.eq(pclass, 1), [0.1339,0.0179,0.8482], [0.2081,0.1965,0.5954])))
                boat = pm.Categorical('boat', p=tt.switch(tt.eq(pclass, 0), [0.0249,0.0398,0.0299,0.0,0.005,0.0,0.0,0.0249,0.005,0.0,0.0,0.0348,0.1294,0.1194,0.1343,0.01,0.005,0.0945,0.1095,0.1144,0.005,0.0299,0.0149,0.0149,0.01,0.0,0.0448], tt.switch(tt.eq(pclass, 1), [0.0,0.1339,0.125,0.1518,0.1071,0.0,0.0,0.2054,0.0089,0.0,0.0268,0.0,0.0,0.0625,0.0,0.0,0.0,0.0,0.0089,0.0,0.0,0.1429,0.0,0.0089,0.0,0.0,0.0179], [0.0,0.0347,0.0289,0.0116,0.1503,0.0116,0.0058,0.0289,0.2023,0.0058,0.1156,0.0347,0.0,0.0,0.0,0.0,0.0,0.0058,0.0,0.0,0.0,0.0173,0.0462,0.0289,0.2081,0.0116,0.052])))
                has_cabin_number = pm.Categorical('has_cabin_number', p=tt.switch(tt.eq(pclass, 0), [0.1692,0.8308], tt.switch(tt.eq(pclass, 1), [0.8482,0.1518], [0.948,0.052])))
                survived = pm.Categorical('survived', p=tt.switch(tt.eq(sex, 0), [0.0031,0.9969], [0.0479,0.9521]))
                age = pm.Normal('age', mu=tt.switch(tt.eq(embarked, 0), tt.switch(tt.eq(pclass, 0), 36.3462, tt.switch(tt.eq(pclass, 1), 20.5921, 20.5546)), tt.switch(tt.eq(embarked, 1), tt.switch(tt.eq(pclass, 0), 35.0, tt.switch(tt.eq(pclass, 1), 29.9406, 27.8244)), tt.switch(tt.eq(pclass, 0), 35.7486, tt.switch(tt.eq(pclass, 1), 25.458, 23.4376)))), sigma=tt.switch(tt.eq(embarked, 0), tt.switch(tt.eq(pclass, 0), 12.6923, tt.switch(tt.eq(pclass, 1), 10.5268, 11.7445)), tt.switch(tt.eq(embarked, 1), tt.switch(tt.eq(pclass, 0), 2.8284, tt.switch(tt.eq(pclass, 1), 0.0841, 4.2584)), tt.switch(tt.eq(pclass, 0), 14.5895, tt.switch(tt.eq(pclass, 1), 14.4234, 11.2448)))))
                
            m = ProbabilisticPymc3Model(modelname, model, data_mapping=dtm, probabilistic_program_graph=pp_graph)
            m.nr_of_posterior_samples = 1000
            if fit:
                m.fit(df_orig, auto_extend=False)
            return df_orig, m
   return code_to_fit